variables:
  NUCLEI_SDK: git@gito:software/library/nuclei-sdk.git
  SDK_BRANCH: dev_xlspike_next
  FIND_IGNORE: '! -wholename "*build*"'
  CORES: "n205,n307,n307fd,nx600,nx600f,nx600fd"
  VECTOR_CORES: "nx600f,nx600fd"
  SOC: xlspike
  IMAGE: rego.corp.nucleisys.com/software/nmsis_build
  IMAGE_TAG: gcc10-ubuntu2004

default:
  tags:
    - env::docker
    - net::outside
  image: $IMAGE:$IMAGE_TAG

stages:
  - build
  - test
  - release

build_doc:
  stage: build
  retry: 1
  only:
    changes:
      - NMSIS/doc/source/**/**/**/*
      - .gitlab-ci.yml
      - NMSIS/Core/
      - NMSIS/DSP/
      - NMSIS/NN/
  artifacts:
    name: "nmsis_doc-${CI_COMMIT_SHA::8}"
    paths:
      - NMSIS/doc/build
    expire_in: 2 day
  before_script:
    - apt update
    - apt install -y doxygen python3 make latexmk texlive-base texlive-latex-extra python3-pip
    - pip3 install -r NMSIS/doc/requirements.txt
  script:
    - cd NMSIS/doc
    - make clean
    - mkdir build
    - make all > build/build.log 2>&1
    - make latexpdf >> build/build.log 2>&1
    - make clean_xml
    - cp build/latex/*.pdf build/html/

build_library:
  stage: build
  retry: 1
  artifacts:
    name: "nmsis_library-${CI_COMMIT_SHA::8}"
    paths:
      - NMSIS/Library
      - NMSIS/build.log
    expire_in: 2 day
  script:
    - cd NMSIS
    - echo "Generate NMSIS Library for Nuclei RISC-V Processors"
    - make PARELLEL=1 gen > build.log 2>&1
    - echo "Strip debug information in NMSIS Library for Nuclei RISC-V Processors"
    - make strip

build_align_library:
  stage: build
  retry: 1
  artifacts:
    name: "nmsis_align_library-${CI_COMMIT_SHA::8}"
    paths:
      - NMSIS/Library
      - NMSIS/build.log
    expire_in: 2 day
  script:
    - cd NMSIS
    - echo "Generate NMSIS Library(Memory access without unalign R/W) for Nuclei RISC-V Processors"
    - make PARELLEL=1 RISCV_ALIGN=ON gen > build.log 2>&1
    - echo "Strip debug information in NMSIS Library for Nuclei RISC-V Processors"
    - make strip

.test_job_template: &test_job_template_default
  stage: test
  before_script:
    # prepare for docker ssh environment
    ## https://docs.gitlab.com/ee/ci/ssh_keys/#ssh-keys-when-using-the-docker-executor
    - apt update
    - command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    # important: need to avoid git ssh asking yes/no when clone
    # https://serverfault.com/questions/469052/ssh-failing-from-script-working-on-command-line-git
    - ssh-keyscan gito > ~/.ssh/known_hosts
  dependencies:
    - build_library

test_nn_library:
  <<: *test_job_template_default
  artifacts:
    name: "nmsis_nn_test_cycles_log-${CI_COMMIT_SHA::8}"
    paths:
      - NMSIS/Logs
    expire_in: 2 day
  script:
    - git clone -b $SDK_BRANCH $NUCLEI_SDK NMSIS/nuclei_sdk
    - export NUCLEI_SDK_ROOT=$(readlink -f NMSIS/nuclei_sdk)
    - export NUCLEI_SDK_NMSIS=$(readlink -f NMSIS)
    - export NMSIS_LOGS=$NUCLEI_SDK_NMSIS/Logs
    - mkdir $NMSIS_LOGS
    - source NMSIS/env.sh
    - export SILENT=1
    - cd NMSIS/NN/NN_Lib_Tests/
    - make gen
    - cd nn_test
    - echo "Benchmark with cycles"
    - export BENCH_UNIT=cycle
    - DSP_ENABLE=OFF VECTOR_ENABLE=OFF nmsis_run_all_apps $CORES . 2>&1 | tee $NMSIS_LOGS/nn_test_dsp_off_vector_off_cycles.log
    - cat $NMSIS_LOGS/nn_test_dsp_off_vector_off_cycles.log | grep CSV | tee $NMSIS_LOGS/nn_test_dsp_off_vector_off_cycles.csv
    - DSP_ENABLE=ON VECTOR_ENABLE=OFF nmsis_run_all_apps $CORES . 2>&1 | tee $NMSIS_LOGS/nn_test_dsp_on_vector_off_cycles.log
    - cat $NMSIS_LOGS/nn_test_dsp_on_vector_off_cycles.log | grep CSV | tee $NMSIS_LOGS/nn_test_dsp_on_vector_off_cycles.csv
    - DSP_ENABLE=OFF VECTOR_ENABLE=ON nmsis_run_all_apps $VECTOR_CORES . 2>&1 | tee $NMSIS_LOGS/nn_test_dsp_off_vector_on_cycles.log
    - cat $NMSIS_LOGS/nn_test_dsp_off_vector_on_cycles.log | grep CSV | tee $NMSIS_LOGS/nn_test_dsp_off_vector_on_cycles.csv
    - DSP_ENABLE=ON VECTOR_ENABLE=ON nmsis_run_all_apps $VECTOR_CORES . 2>&1 | tee $NMSIS_LOGS/nn_test_dsp_on_vector_on_cycles.log
    - cat $NMSIS_LOGS/nn_test_dsp_on_vector_on_cycles.log | grep CSV | tee $NMSIS_LOGS/nn_test_dsp_on_vector_on_cycles.csv
    - cd ../../Examples/RISCV/
    - DSP_ENABLE=OFF VECTOR_ENABLE=OFF nmsis_run_all_apps $CORES . 2>&1 | tee $NMSIS_LOGS/nn_examples_dsp_off_vector_off_cycles.log
    - cat $NMSIS_LOGS/nn_examples_dsp_off_vector_off_cycles.log | grep CSV | tee $NMSIS_LOGS/nn_examples_dsp_off_vector_off_cycles.csv
    - DSP_ENABLE=ON VECTOR_ENABLE=OFF nmsis_run_all_apps $CORES . 2>&1 | tee $NMSIS_LOGS/nn_examples_dsp_on_vector_off_cycles.log
    - cat $NMSIS_LOGS/nn_examples_dsp_on_vector_off_cycles.log | grep CSV | tee $NMSIS_LOGS/nn_examples_dsp_on_vector_off_cycles.csv
    - DSP_ENABLE=OFF VECTOR_ENABLE=ON nmsis_run_all_apps $VECTOR_CORES . 2>&1 | tee $NMSIS_LOGS/nn_examples_dsp_off_vector_on_cycles.log
    - cat $NMSIS_LOGS/nn_examples_dsp_off_vector_on_cycles.log | grep CSV | tee $NMSIS_LOGS/nn_examples_dsp_off_vector_on_cycles.csv
    - DSP_ENABLE=ON VECTOR_ENABLE=ON nmsis_run_all_apps $VECTOR_CORES . 2>&1 | tee $NMSIS_LOGS/nn_examples_dsp_on_vector_on_cycles.log
    - cat $NMSIS_LOGS/nn_examples_dsp_on_vector_on_cycles.log | grep CSV | tee $NMSIS_LOGS/nn_examples_dsp_on_vector_on_cycles.csv

test_dsp_library:
  <<: *test_job_template_default
  artifacts:
    name: "nmsis_dsp_test_cycles_log-${CI_COMMIT_SHA::8}"
    paths:
      - NMSIS/Logs
    expire_in: 2 day
  script:
    - git clone -b $SDK_BRANCH $NUCLEI_SDK NMSIS/nuclei_sdk
    - export NUCLEI_SDK_ROOT=$(readlink -f NMSIS/nuclei_sdk)
    - export NUCLEI_SDK_NMSIS=$(readlink -f NMSIS)
    - export NMSIS_LOGS=$NUCLEI_SDK_NMSIS/Logs
    - mkdir $NMSIS_LOGS
    - source NMSIS/env.sh
    - export SILENT=1
    - cd NMSIS
    - cd DSP/Examples/RISCV
    - DSP_ENABLE=OFF VECTOR_ENABLE=OFF nmsis_run_all_apps $CORES . 2>&1 | tee $NMSIS_LOGS/dsp_examples_dsp_off_vector_off_cycles.log
    - DSP_ENABLE=ON VECTOR_ENABLE=OFF nmsis_run_all_apps $CORES . 2>&1 | tee $NMSIS_LOGS/dsp_examples_dsp_on_vector_off_cycles.log
    - DSP_ENABLE=OFF VECTOR_ENABLE=ON nmsis_run_all_apps $VECTOR_CORES . 2>&1 | tee $NMSIS_LOGS/dsp_examples_dsp_off_vector_on_cycles.log
    - DSP_ENABLE=ON VECTOR_ENABLE=ON nmsis_run_all_apps $VECTOR_CORES . 2>&1 | tee $NMSIS_LOGS/dsp_examples_dsp_on_vector_on_cycles.log
    - cd -
    - cd DSP/Test
    - echo "Benchmark with cycles"
    - export BENCH_UNIT=cycle
    - DSP_ENABLE=OFF VECTOR_ENABLE=OFF nmsis_run_all_apps $CORES . 2>&1 | tee $NMSIS_LOGS/dsp_test_dsp_off_vector_off_cycles.log
    - cat $NMSIS_LOGS/dsp_test_dsp_off_vector_off_cycles.log | grep CSV | tee $NMSIS_LOGS/dsp_test_dsp_off_vector_off_cycles.csv
    - DSP_ENABLE=ON VECTOR_ENABLE=OFF nmsis_run_all_apps $CORES . 2>&1 | tee $NMSIS_LOGS/dsp_test_dsp_on_vector_off_cycles.log
    - cat $NMSIS_LOGS/dsp_test_dsp_on_vector_off_cycles.log | grep CSV | tee $NMSIS_LOGS/dsp_test_dsp_on_vector_off_cycles.csv
    - DSP_ENABLE=OFF VECTOR_ENABLE=ON nmsis_run_all_apps $VECTOR_CORES . 2>&1 | tee $NMSIS_LOGS/dsp_test_dsp_off_vector_on_cycles.log
    - cat $NMSIS_LOGS/dsp_test_dsp_off_vector_on_cycles.log | grep CSV | tee $NMSIS_LOGS/dsp_test_dsp_off_vector_on_cycles.csv
    - DSP_ENABLE=ON VECTOR_ENABLE=ON nmsis_run_all_apps $VECTOR_CORES . 2>&1 | tee $NMSIS_LOGS/dsp_test_dsp_on_vector_on_cycles.log
    - cat $NMSIS_LOGS/dsp_test_dsp_on_vector_on_cycles.log | grep CSV | tee $NMSIS_LOGS/dsp_test_dsp_on_vector_on_cycles.csv
    - cd -

release_benchmark:
  stage: release
  artifacts:
    name: "nmsis_test_log-${CI_COMMIT_SHA::8}"
    paths:
      - NMSIS/Logs
    expire_in: 2 day
  dependencies:
    - test_nn_library
    - test_dsp_library
  script:
    - ls -lh NMSIS/Logs

deploy_website:
  stage: release
  only:
    refs:
      - master
    changes:
      - NMSIS/doc/source/**/**/**/*
      - .gitlab-ci.yml
      - NMSIS/Core/
      - NMSIS/DSP/
      - NMSIS/NN/
  dependencies:
    - build_doc
  tags:
    - env::native
    - host::xls01
  script:
    - ./.ci/ftp_deploy.sh $FTPUSER $FTPPWD $FTPSERVER NMSIS/doc/build/html nmsis
